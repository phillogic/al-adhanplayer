
# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: docker_build.yml

on:
  workflow_dispatch:
  push:
    paths-ignore: 
      - '**/workflows/manual.yml'
      - '**/workflows/k8s_*.yml'
      - 'README.*'
      - 'k8s_deployment/*.yml'
    branches: [ master ]
jobs:
  test:

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python 3.8.10
      uses: actions/setup-python@v4.5.0
      with:
        python-version: 3.8.10
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        export PYTHONPATH="$PYTHONPATH:."
        python test/AdhanPlayerTest.py
  
  build:
     needs: test
     runs-on: ubuntu-latest
     steps:
     
     - name: Docker Setup QEMU
       uses: docker/setup-qemu-action@v2.1.0
       
     - name: Docker Setup Buildx
       uses: docker/setup-buildx-action@v2.4.1
       with:
         install: true

     - name: Docker Login
       uses: docker/login-action@v2.1.0
       with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PAT }}
      
     - name: Build and push Docker images
       uses: docker/build-push-action@v4.0.0
       with:
          tags: phillogic/adhanplayer:latest, phillogic/adhanplayer:${{github.run_number}}
          push: true
          platforms: linux/arm64, linux/arm/v7
 
